{"version":3,"sources":["settings.js","Controls.js","Video.js","VideoCall.js","App.js","index.js"],"names":["config","mode","codec","appId","token","useClient","createClient","useMicrophoneAndCameraTracks","createMicrophoneAndCameraTracks","channelName","Controls","props","tracks","setStart","setInCall","useState","video","audio","trackState","setTrackState","client","mute","type","a","setEnabled","ps","leaveChannel","leave","removeAllListeners","close","Grid","container","spacing","alignItems","item","Button","variant","color","onClick","Video","users","gridSpacing","setGridSpacing","useEffect","Math","max","floor","length","style","height","xs","videoTrack","width","map","user","uid","VideoCall","setUsers","ready","init","cName","on","mediaType","subscribe","prevUsers","audioTrack","play","stop","filter","u","join","console","log","publish","err","direction","App","inCall","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59d34fe5.chunk.js","sourcesContent":["import {createClient, createMicrophoneAndCameraTracks} from 'agora-rtc-react'\r\n\r\nconst appId = \"22441ee31b92425fb89f853edc596844\"\r\nconst token = \"00622441ee31b92425fb89f853edc596844IADDvxxJslvnP1H2YHuOzzYe6LxJSraQV6ehN9+jd4/BIGTNKL8AAAAAEADC2ctrLis+YQEAAQAwKz5h\"\r\n\r\n\r\nexport const config = {\r\n    mode:\"rtc\",\r\n    codec:\"vp8\",\r\n    appId:appId,\r\n    token:token\r\n}\r\n\r\nexport const useClient = createClient(config);\r\nexport const useMicrophoneAndCameraTracks = createMicrophoneAndCameraTracks();\r\nexport const channelName = \"main\";","import { Grid,Button,Icon } from '@material-ui/core';\r\nimport MicIcon from '@material-ui/icons/Mic'\r\nimport MicOffIcon from '@material-ui/icons/MicOff'\r\nimport VideoCamIcon from '@material-ui/icons/Videocam'\r\nimport VideoCamOffIcon from '@material-ui/icons/VideocamOff'\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\r\nimport React, { useState } from 'react'\r\nimport { useClient } from './settings';\r\n\r\nconst Controls = (props) => {\r\n    const {tracks, setStart, setInCall} = props\r\n    const [trackState, setTrackState] = useState({video:true, audio:true});\r\n    const client = useClient();\r\n\r\n    const mute = async(type)=>{\r\n        if( type ==\"audio\"){\r\n            await tracks[0].setEnabled(!trackState.audio)\r\n            setTrackState((ps)=>{\r\n                return {...ps, audio:!ps.audio}\r\n            })\r\n        }\r\n        else if( type ==\"video\"){\r\n            await tracks[1].setEnabled(!trackState.audio)\r\n            setTrackState((ps)=>{\r\n                return {...ps, video:!ps.video}\r\n            })\r\n        }\r\n    }\r\n\r\n    const leaveChannel = async()=>{\r\n        await client.leave();\r\n        client.removeAllListeners();\r\n        tracks[0].close();\r\n        tracks[1].close();\r\n        setStart(false);\r\n        setInCall(false);\r\n    }\r\n\r\n    return (\r\n       <Grid container spacing={2} alignItems=\"center\">\r\n           <Grid item>\r\n               <Button variant=\"contained\" color={trackState.audio?\"primary\":\"secondary\"} onClick={()=>mute(\"audio\")}>\r\n               {trackState.audio?<MicIcon/>:<MicOffIcon/>}\r\n               </Button>\r\n           </Grid>\r\n           <Grid item>\r\n           <Button variant=\"contained\" color={trackState.video?\"primary\":\"secondary\"} onClick={()=>mute(\"video\")}>\r\n               {trackState.video?<VideoCamIcon/>:<VideoCamOffIcon/>}\r\n               </Button>\r\n           </Grid>\r\n           <Grid item>\r\n           <Button variant=\"contained\" color=\"default\" onClick={()=>leaveChannel()}>\r\n                Leave <ExitToAppIcon/>\r\n               </Button>\r\n           </Grid>\r\n       </Grid>\r\n    )\r\n}\r\n\r\nexport default Controls\r\n","import React from 'react'\r\nimport { AgoraVideoPlayer } from 'agora-rtc-react'\r\nimport { Grid } from '@material-ui/core'\r\nimport { useState, useEffect } from 'react'\r\nconst Video = (props) => {\r\n    const { users, tracks } = props;\r\n    const [gridSpacing, setGridSpacing] = useState(12);\r\n    useEffect(() => {\r\n        setGridSpacing(Math.max(Math.floor(12 / (users.length + 1)), 4))\r\n    }, [users, tracks])\r\n    return <Grid container style={{ height: \"100%\" }}>\r\n        <Grid item xs={gridSpacing}>\r\n            <AgoraVideoPlayer videoTrack={tracks[1]} style={{ height: \"100%\", width: \"100%\" }} />\r\n        </Grid>\r\n        {\r\n            users.length > 0 && users.map((user) => {\r\n                if (user.videoTrack)\r\n                    return <Grid item xs={gridSpacing}>\r\n                        <AgoraVideoPlayer videoTrack={user.videoTrack} key={user.uid} style={{ height: \"100%\", width: \"100%\" }} />\r\n                    </Grid>\r\n                else return null\r\n            })\r\n        }\r\n\r\n    </Grid>\r\n}\r\n\r\nexport default Video\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport { channelName, config, useClient, useMicrophoneAndCameraTracks } from './settings'\r\nimport { Grid } from '@material-ui/core'\r\nimport Controls from './Controls';\r\nimport Video from './Video';\r\n\r\nconst VideoCall = (props) => {\r\n    const { setInCall } = props;\r\n    const [ users, setUsers ] = useState([]);\r\n    const [start, setStart] = useState(false);\r\n    const client = useClient();\r\n    const { ready, tracks } = useMicrophoneAndCameraTracks();\r\n\r\n    useEffect(() => {\r\n        let init = async (cName) => {\r\n            client.on(\"user-published\", async (user, mediaType) => {\r\n                await client.subscribe(user, mediaType);\r\n                if (mediaType === \"video\") {\r\n                    setUsers(prevUsers => {\r\n                        return [...prevUsers, user];\r\n                    })\r\n                }\r\n                if (mediaType === \"audio\") {\r\n                    user.audioTrack.play();\r\n                }\r\n            })\r\n\r\n            client.on(\"user-unpublished\", (user, mediaType) => {\r\n                if (mediaType === \"audio\") {\r\n                    if (user.audioTrack) user.audioTrack.stop();\r\n                }\r\n                if (mediaType === \"video\") {\r\n                    setUsers(prevUsers => {\r\n                        return prevUsers.filter(u => (u.uid !== user.uid));\r\n                    })\r\n                }\r\n            })\r\n\r\n            client.on(\"user-left\", (user) => {\r\n                setUsers(prevUsers => {\r\n                    return prevUsers.filter(u => (u.uid !== user.uid));\r\n                })\r\n            })\r\n\r\n            try{\r\n                await client.join(config.appId,cName,config.token,null);\r\n            }catch(err){\r\n                console.log(err);\r\n            }\r\n            if(tracks) await client.publish([tracks[0],tracks[1]]);\r\n            setStart(true);\r\n        }\r\n\r\n        if (ready && tracks){\r\n            try{\r\n                init(channelName)\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n            }\r\n        }\r\n    }, [channelName, client, ready, tracks])\r\n    return (\r\n        <Grid container direction=\"column\" style={{height:\"100%\"}}>\r\n            <Grid item style ={{height:\"5%\"}}>\r\n                {ready && tracks && (<Controls tracks={tracks} setStart={setStart} setInCall={setInCall}/>)}\r\n            </Grid>\r\n            <Grid item style ={{height:\"95%\"}}>\r\n            {ready && tracks && (<Video tracks={tracks} users={users} />)}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default VideoCall\r\n","import React from 'react'\nimport { useState } from 'react'\nimport { Button } from '@material-ui/core';\nimport VideoCall from './VideoCall';\n\nconst App = () => {\n  const [inCall, setInCall] = useState(false);\n  return (\n    <div className=\"App\" style={{height:\"100%\"}}>\n      <Button variant=\"contained\" color=\"primary\" onClick={()=>setInCall(true)}>Join Call</Button>\n      {inCall? <VideoCall setInCall={setInCall}/>:\"Waiting to join call!\"}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}